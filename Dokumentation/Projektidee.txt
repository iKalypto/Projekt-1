=== Projektidee ThiPhuongThaoHo, 2016-05-31 ===
Die Projektidee ist die Umsetzung des Brettspiels Arkham Horror als eine webbasierte Anwendung, bei dem ein bis acht Spieler an einem Rechner zusammen spielen können.
Die Spieler, die Rollen von Ermittlern übernehmen, müssen alle Tore dauerhaft vor dem Erwachen eines Großen Alten durch das Bekämpfen von Monstern schließen um die Menschheit in der Stadt Arkham und den Rest der Welt somit vor dem Untergang bewahren zu können.
Derjenige gewinnt, der die meisten Tore geschlossen hat.

Interaktionsmöglichkeiten:

- Startbildschirm soll mit einem Slogan: „Wer ist der Held von Arkham?“ gezeigt werden
- Es soll einen LogIn-Bereich geben. Im LogIn-Bereich fragt die Anwendung den Benutzer nach einen Charakter und dazu gibt sie eine Charakterliste aus. Sie setzt automatisch die Fähigkeiten des Charakters in der Figur des Benutzers ein
- Die Webanwendung soll die Spielzüge des Benutzers nach der Anzahl der Augen der virtuellen Würfel zuweisen 
- Die Webanwendung kann die Monster steuern
- Die Webanwendung soll die übrige Zeit nach dem Start berechnen und als ein Countdown zeigen.
- Sie soll alle Aktionen des Spielers ausführen (z.B. die Durchführung des Würfelns, die Einsammlung der Gegenstände, den Kampf gegen Monster oder dem Ausweichen von Monster)
- Die Anwendung soll die Anzahl der Gegenstände berechnen und das Ergebnis zeigen.
- Sie soll das Ergebnis des Kampfs gegen Monster zeigen und die Anzahl der Spielleben zeigen oder  das Schliessen eines Tors durchführen
     - Die Anzahl des Spielleben wird um 1 verringert, wenn der Spieler den Kampf gegen Monster verliert. (Normalerweise setzt die  Anwendung immer 3 Leben)
     - Die Anwendung schliesst ein Tor, wenn der Spieler gewinnt. Außerdem zählt die Anwendung die Anzahl der geschlossenen Tore um 1 (in Highscore) hoch
- Wenn die Anzahl eines Benutzer gleich 0 ist, soll die Anwendung alle Aktionen des Benutzer beenden, seinen Highscore berechnen,speichern und anzeigen. Die Anwendung setzt sofort einen nächsten Benutzer ein und startet von Anfang neu (LogIn-Bereich,…)
- Die Webanwendung soll alle genannten Aktionen für alle Spieler durchführen.
- Die Webanwendung soll am Ende den besten Highscore berechnen und den Gewinner ermitteln



=== Projektidee Ende ===



=== Projektidee ThiPhuongThaoHo, 2016-05-22 ===


Die Projektidee ist die Umsetzung des Brettspiels Arkham Horror als eine webbasierte Anwendung, bei dem ein bis acht Spieler die Rollen von Ermittlern übernehmen, die alle Tore dauerhaft vor dem Erwachen eines Großen Alten durch das Bekämpfen von Monstern schließen müssen, um die Menschheit in der Stadt Arkham und den Rest der Welt somit vor dem Untergang bewahren zu können.

- Der Nutzer loggt sich ein (falls er schon einen Account erstellt hat), sonst muss der Benutzer einen Account erstellen und seine Daten werden in einer Datenbank gespeichert.
- Der Nutzer kann nicht nur seine persönliche aktuelle Highscore in seinem LogIn - Bereich sehen sondern auch den Highscore mit anderen vergleichen.
- Der Spieler wählt einen der vorgefertigten Charaktere. Nach dem erfolgreichen Auswählen wird ein Ermittler‐Charakterbogen gezeigt. Dieser Charakterbogen enthält ein dazugehöriges Startfeld auf dem Spielbrett,
den festgelegten Besitz (z.B. Startguthaben in Dollar), zufälligen Besitz (Gegenstände, Zauber...), die Höhe der geistigen Gesundheit und Ausdauer, die Fertigkeiten‐Startwerte (z.B. für Geschwindigkeit, Schleichen, Kampf, Wille,
Wissen, Glück). Alle Eigenschaften im Charakterbogen werden sofort eingesetzt und die Spieler können diese verwenden.
- Der Nutzer muss außerdem einen zufälligen "Großen Alten" ziehen.
- Das Spiel wird in 5 Phasen (Unterhalt, Bewegung, Begegnungen in Arkham, Begegnungen in "Anderen Welten", Mythos) gespielt.
- Der Spieler kann seinen Charakter bewegen. Die Bewegung des Charakters ist möglich in alle Richtungen (links,rechts, vorwärts, rückwärts). Pro Punkt bei Geschwindigkeit kann ein Standort oder Straßengebiet
betreten werden. Wenn der Ermittler am Zielort (Bewegung beendet) ist und liegen dort ein oder mehrere Hinweismarker, dann darf der Spieler beliebig viele davon sofort aufnehmen.
- Wenn ein Spieler ein Feld mit einem oder mehreren Monstern betritt, dann muss er gegen jedes kämpfen oder ihm ausweichen.
- Bei beiden Aktionen muss der Spieler würfeln. Die Anzahl der Würfe hängt von errechneten Werten ab. Es muss mindestens 1 erfolgreicher Würfelwurf (in der Regel die Zahl 5 oder 6) dabei sein. Misslingt die Probe, dann kommt es zum Kampf 
und vorher gibt es noch 1x den auf dem Monstermarker genannten Schaden. Verschiedene Zufallsereignisse können das Vorgehen der Spieler positiv und negativ beeinflussen. 
- Am Ende jedes Zuges zieht der Startspieler eine Karte vom Mythosstapel, was dazu führt, dass sich ein neues Tor öffnet, neue Monster in Arkham eindringen,
 bereits vorhandene Monster bewegen oder andere den Spielmechanismus beeinflussende Ereignisse eintreten.
- Nachdem die Mythoskarte abgearbeitet ist wechselt der Startspielermarker im Uhrzeigersinn zum nächsten Spieler, welcher die neue Runde beginnt.
- Das Spiel endet mit einem Sieg, wenn alle Tore in Arkham geschlossen sind und die Spieler Tortrophäen >= Spieleranzahl oder ‐ mindestens 6 "Ältere Zeichen" ausliegen oder der "Große Alte" gebannt, d.h. im Endkampf besiegt wurde.
- Eine Highscoretabelle (der Highscore aller Spieler) wird am Ende gezeigt.


=== Projektidee Ende ===


=== Projektidee ThPhuongThaoHo, 2016-04-20 ===

Nach Ihrem Vorschlag zur Projektidee wird mein Projekt eine Umwandlung eines Brettspiels in ein Computerspiel sein. 
Das Spiel heißt "Arkham Horror".
"Arkham Horror" spielt im Jahr 1926 in der Stadt Arkham in Massachusetts. 
Genau in dieser Stadt öffnen sich Tore in andere Welten und durch diese strömen erst Monster und am Ende ein mächtiges Ungeheuer, welches nur als "Großer Alter" bekannt ist.
In diesem Spiel schlüpfen die Spieler in die Rolle verschiedener Personen, wie zum Beispiel einem Abenteuer und versuchen gemeinsam die Stadt Arkham und 
den Rest der Welt vor dem "Großen Alten" zu bewahren, in dem sie vor seiner Ankunft alle Tore versiegeln.

=== Feedback Alpers, 2016-04-29 ===

Bitte fügen Sie Ihre Beschreibung und diesen Kommentar in die Datei Projektidee.txt ein und löschen Sie danach diese Datei. Es soll für andere Studierende ohne weiteres Nachdenken möglich sein, sofort die Datei mit der Projektidee zu öffnen.

Prüfen Sie auch nochmal, wozu Systeme wie Git da sind. Wenn Sie das verstanden haben, dann wissen Sie auch, warum Dateien wie Projektidee_neu.txt überflüssig sind.

Jetzt zum eigentlichen Feedback: Dummerweise kann anhand des Textes, den Sie als Beschreibung verfasst haben niemand erkennen, wie das Spiel funktioniert. Hier müssen Sie nochmal nacharbeiten:
- Arbeiten Sie heraus, was das eigentliche Spiel ausmacht.
- Welche Interaktionsmöglichkeiten haben Spieler bei der geplanten webbasierten Umsetzung?

Wertung 2: Projektbeschreibung: gesamt: 1 / 10
- Interaktionsmöglichkeit: 0
- Knappe aber klare Beschreibung: 1
- Werbeslogans u.ä.: 0
- Designaspekte: 0
- Voraussetzung bekannten Wissens: 0

=== Feedback Ende ===



=== Projektidee ThiPhuongThaoHo, 2016-04-05 ===

Mein Projekt ist ein "Smart Calender".  
Hier kann man Termine wie Geburtstage und Klausuren speichern und sich erinnern lassen. 
Die Zeit bis zum Termin kann durch einen Countdown angezeigt werden.
Der Benutzer gibt das Datum und Details zu dem Termin ein. 
Er kann zu selbst festgelegten Zeiten visuell und optional akkustisch ueber den kommenden Termin informiert werden. 

=== Feedback Alpers, 2016-04-07 ===

Die Beschreibung der Projektidee ist gut.

Leider ist die Projektidee eher eine Datenbankanwendung und bietet kaum Möglichkeiten zur Interaktion. Versuchen Sie deshalb eine Projektbeschreibung zu folgenem Spiel zu erstellen: Arkham Horror http://www.brettspiele-report.de/arkham-horror/

Außerdem haben Sie leider die Datei für die Projektidee nicht da abgespeichert, wo Sie das laut Kap. 5 tun sollten. Bitte passen Sie das noch an.

=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===

Sie haben jetzt gezeigt, dass Sie einfache Arbeiten mit einem Git-Repository beherrschen.
Als Teil der letzten Aufgabe sollten Sie beschreiben, was Ihre Anwendung tun soll, also was für Funktionalitäten Ihre Anwendung bieten soll.
Wenn Sie hier nichts angegeben haben, dann werde ich Ihnen einen Vorschlag hochladen, mit dem Sie weiterarbeiten können.
In der Veranstaltung haben Sie außerdem gelernt, was Markup Languages sind.

Die nächste Aufgabe besteht aus den folgenden Teilen:

1.) Lesen Sie mein Feedback durch und setzen Sie die beschriebenen Aufgaben um.

Für die folgende Aufgabe sollten Sie mindestens eine halbe Stunde investieren. Zwei Stunden wäre aber etwas zu viel des guten.
Bearbeiten Sie die Aufgaben 2. und 3. bitte innerhalb von 48 Stunden, weil andere Studierende davon abhängen, dass Sie sie beendet haben.
Bearbeiten Sie die Aufgaben auf jeden Fall in der vorgegebenen Reihenfolge.
Und bearbeiten Sie eine Aufgabe nicht nachträglich nochmal. (Wenn Sie also z.B. Aufgabe 3. bearbeiten, dann ändern Sie bitte nichts an Aufgabe 1. nachträglich ab. Dafür wird später noch genug Zeit sein.)

2.) Bennen Sie die strukturellen Elemente, aus denen Ihre Anwendung bestehen soll.
Es ist dabei egal, ob es diese Elemente in HTML gibt.
Es ist auch egal, ob Sie sich schon in HTML eingearbeitet haben.
Wichtig ist nur, dass Sie die strukturellen Elemente benennen, aus der die Anwendung bestehen soll.
Speichern Sie diese Aufstellung als HTML-Kommentar in einer Datei mit dem Namen

strukt.html

, die Sie in Ihrem Repository abspeichern. Wichtig: Die Datei soll nicht im Unterverzeichnis Dokumentation des Repositories gespeichert werden, weil sie die Basis für das erste HTML-Dokument werden wird.

Wenn Sie noch unsicher sind: Strukturelle Elemente können alles mögliche sein:
- Tabellen
- Listen
- Schaltflächen
- Textfelder
- Bildbereiche
- Hintergrundmusik
- Absätze
- ...

In anderen Worten: Ein strukturelles Element ist etwas, das ein abgegrenzter Teil der Anwendung ist.
Notieren Sie kurz, welche Funktion jedes der von Ihnen genannten Elemente haben soll.

Hier einige Beispiele:
- Schaltfläche (Nutzer können per Klick bestätigen, dass eine Eingabe abgeschickt werden soll.)
- Textfeld für Namen (Nutzer können Ihren Nachnamen eintragen.)
- Log-In-Maske (Bereich, in dem Nutzer sich einloggen können.)
- - Teile der Log-In-Maske:
- - Textfeld für Username
- - Textfeld, das die Eingabe nicht anzeigt, fürs Passwort
- Tabelle, 7 x 5 Felder (Jedes Feld soll ein Bild anzeigen, das ein Feld des Spielbretts ist. Wenn Nutzer ein Feld anwählen, soll ein Menü erscheinen.)
- - Menü für jedes Feld der Tabelle mit Texteinträgen (Eintrag für "Gebäude abreißen", "Feld kaufen")
- Hintergrundbild (Hier sollen einzelne Bilder als Diashow eingeblendet werden.)
- Werbebanner
- Schaltfläche für die Maskierung von NSFW (NSFW = Not safe for work)(NutzerInnen können über diese Schaltfläche eine andere Anwendung in der Vordergrund einblenden lassen, damit der Chef nicht sieht, dass sie gerade spielen.)

3.) Schauen Sie jetzt in der Liste der Repositories (nicht in der Tabelle der Accounts) nach, welche zehn Repositories vor und nach Ihrem Repository aufgeführt sind und geben Sie den Besitzern dieser Repositories Zugriffsrechte auf Ihr Repository.

Bsp.: Sie haben das Repository BerndStromberg. Dann folgen die zehn Repositories der Nutzer BlackWolf63, Cantinaband, CaptainWeasle, ColePfeiffer, CurvLietzau,
DangerDulf, dnbdel, Domsche, Eldinox und Eupuco und vor Ihnen gibt es die fünf Repositories der Nutzer 2238867, amelie-beh, Anger21, anita1997 und Asphalon. all diesen Accounts geben Sie jetzt Zugriffsrechte auf Ihr Repository, so wie Sie das schon für mich getan haben. Wenn Sie, wie BerndStrommberg zu weit am Anfang der Liste stehen (hier gibt es ja nur fünf andere Accounts bis zum Anfang der Liste), dann geben Sie zusätzlich noch den Besitzern der letzten fünf Repositories Zugriffsrechte. Es sollten insgesamt 20 Accounts Zugriffsrecht haben.

Für die nächsten zwei Aufgaben sollten Sie pro Repository zwischen zehn Minuten und einer Stunde aufwenden. Weniger ist zu wenig und mehr ist zu viel.
Beachten Sie dabei bitte, dass Sie hier letzten Endes Kritik an der Arbeit eines/einer anderen üben und das einige von Ihnen noch nie programmiert haben. Arbeiten Sie deshalb bitte daran, alles, was Sie ergänzen so neutral und höflich wie möglich zu formulieren, denn Unwissenheit und mangelndes Verständnis fürs Programmieren sind eben nicht das selbe wie Dummheit oder Faulheit.

Bitte erledigen Sie diese Aufgaben innerhalb der nächsten sieben Tage.

4.) Als nächstes greifen Sie auf die nach Ihrem Repository nachfolgenden fünf Repositories zu und bearbeiten hier die folgende Aufgabe. (Hier hängen Sie also davon ab, dass andere Kommilitonen Aufgabe 3. erledigt haben.) 

Lesen Sie sich die Projektidee durch und machen Sie sich ähnlich wie bei 2. einfache Stichpunkte über strukturelle Elemente, die Sie bei dieser Projektidee sinnvoll finden. (Hier erstmal nur Stichpunkte, Details arbeiten Sie unter 5. aus.)

5.) Öffnen Sie jetzt die Datei strukt.html des Repositories, das Sie gerade bearbeiten. Ergänzen Sie Elemente, die Sie unter 4. notiert haben und die noch nicht eingetragen sind in der unter 2. beschriebenen Form.

Abschließender Hinweis zu 4. und 5.:

Auch wenn das nirgends explizit steht sollen Sie Änderungen in das Repository pushen, aus dem sie die Datei strukt.html gepullt haben.
Es ist dabei sehr wahrscheinlich, dass Sie (vielleicht auch erst später während der Projektbearbeitung) einen merge durchführen müssen. Wenn Sie sich noch nicht angesehen haben, wie das geht, dann tun Sie es jetzt.

Viele Grüße,
Markus Alpers
